{"version":3,"sources":["store/products-slice.js","Navigation/SearchInput.js","Navigation/TopNav.js","Navigation/SideNav.js","store/auth-slice.js","Header.js","Footer.js","Layout/Layout.js","store/wallet-slice.js","CryptoCard.js","store/wallet-actions.js","Content.js","store/products-actions.js","WalletCard.js","Wallet.js","Login.js","Register.js","App.js","reportWebVitals.js","store/index.js","index.js"],"names":["productsSlice","createSlice","name","initialState","items","enteredFilter","isInitial","reducers","loadProducts","state","action","payload","setEnteredFilter","toLowerCase","productsActions","actions","Search","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","display","marginRight","spacing","marginLeft","width","breakpoints","up","SearchIconWrapper","padding","height","pointerEvents","alignItems","justifyContent","StyledInputBase","InputBase","color","paddingLeft","transition","transitions","create","SearchInput","dispatch","useDispatch","useState","placeholder","inputProps","value","onChange","e","filter","target","TopNav","props","AppBar","sx","marginBottom","Toolbar","Grid","container","item","xs","MenuItem","to","component","Link","isAuth","onClick","logout","SideNav","window","React","mobileOpen","setMobileOpen","handleDrawerToggle","drawer","Divider","List","ListItem","button","ListItemText","primary","undefined","document","body","mb","IconButton","edge","mr","Box","sm","flexShrink","Drawer","variant","open","onClose","ModalProps","keepMounted","boxSizing","authSlice","isLoggedIn","token","localId","logIn","logOut","checkAuth","authActions","Header","useSelector","auth","localStorage","removeItem","md","Footer","Layout","this","children","Component","walletSlice","changed","loadWallet","changeWalletStatus","addItemToWallet","newItem","push","id","title","tokenName","tokenId","chain","imageUrl","price","round","listingDate","inWallet","removeItemFromWallet","addTokensToWallet","tokenHoldings","enteredTokens","find","walletActions","CryptoCard","walletButton","data","webPage","twitterPage","telegram","chart","vesting","currentPrice","setCurrentPrice","useEffect","url","fetch","method","headers","then","response","ok","json","usd","console","log","error","message","catch","err","checkPrice","Button","style","Card","CardHeader","avatar","Avatar","src","subheader","CardContent","Typography","margin","m","align","href","CardActions","underline","sendWalletData","itemData","a","fetchData","getItem","userId","requestOptions","JSON","stringify","Error","fetchWalletData","walletData","Content","products","productItems","includes","wallet","productsData","rowSpacing","columnSpacing","map","WalletCard","editTokens","setEditable","setEnteredTokens","editHandler","flexGrow","Input","type","event","Wallet","Login","navigate","useNavigate","enteredEmail","setEnteredEmail","emailIsValid","setEmailIsValid","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","trim","length","login","process","authData","email","password","returnSecureToken","loginData","idToken","setItem","direction","autoComplete","label","fullWidth","mt","disabled","Register","register","App","routes","path","element","replace","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b6bc8c36.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n// import data from \"../data\";\r\n\r\nconst productsSlice = createSlice({\r\n  name: \"products\",\r\n  initialState: {\r\n    items: [],\r\n    enteredFilter: [],\r\n    isInitial: true,\r\n  },\r\n  reducers: {\r\n    loadProducts(state, action) {\r\n      state.items = action.payload.items;\r\n      state.isInitial = false;\r\n    },\r\n    setEnteredFilter(state, action) {\r\n      state.enteredFilter = action.payload.toLowerCase();\r\n    },\r\n  },\r\n});\r\nexport const productsActions = productsSlice.actions;\r\n\r\nexport default productsSlice;\r\n","import SearchIcon from \"@mui/icons-material/Search\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useState } from \"react\";\r\n\r\nimport { productsActions } from \"../store/products-slice\";\r\n\r\nimport { InputBase } from \"@mui/material\";\r\n\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  display: \"flex\",\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: \"100%\",\r\n  [theme.breakpoints.up(\"md\")]: {\r\n    marginLeft: theme.spacing(3),\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst SearchInput = () => {\r\n  const dispatch = useDispatch();\r\n  const [enteredFilter, setEnteredFilter] = useState(\"\");\r\n\r\n  const filter = (e) => {\r\n    dispatch(productsActions.setEnteredFilter(e));\r\n    setEnteredFilter(e);\r\n  };\r\n  return (\r\n    <Search>\r\n      <SearchIconWrapper>\r\n        <SearchIcon />\r\n      </SearchIconWrapper>\r\n      <StyledInputBase\r\n        placeholder=\"Search…\"\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        value={enteredFilter.toLowerCase()}\r\n        onChange={(e) => filter(e.target.value)}\r\n      />\r\n    </Search>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import React from \"react\";\r\n\r\nimport { AppBar, Toolbar, Grid, MenuItem } from \"@mui/material\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport SearchInput from \"./SearchInput\";\r\n\r\nconst TopNav = (props) => {\r\n  return (\r\n    <AppBar position=\"static\" sx={{ marginBottom: \"10px\" }}>\r\n      <Toolbar>\r\n        <Grid container>\r\n          <Grid container item xs={8}>\r\n            <MenuItem color=\"textPrimary\" to=\"/home\" component={Link}>\r\n              Dashboard\r\n            </MenuItem>\r\n            <SearchInput />\r\n            {props.isAuth ? (\r\n              <MenuItem color=\"textPrimary\" to=\"/wallet\" component={Link}>\r\n                Wallet\r\n              </MenuItem>\r\n            ) : null}\r\n          </Grid>\r\n          <Grid container item xs={4} justifyContent=\"flex-end\">\r\n            {!props.isAuth ? (\r\n              <>\r\n                <MenuItem to=\"/login\" component={Link}>\r\n                  Login\r\n                </MenuItem>\r\n                <MenuItem color=\"textPrimary\" to=\"/register\" component={Link}>\r\n                  Register\r\n                </MenuItem>\r\n              </>\r\n            ) : (\r\n              <MenuItem\r\n                color=\"textPrimary\"\r\n                to=\"/home\"\r\n                component={Link}\r\n                onClick={props.logout}\r\n              >\r\n                Logout\r\n              </MenuItem>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default TopNav;\r\n","import * as React from \"react\";\r\nimport SearchInput from \"./SearchInput\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst SideNav = (props) => {\r\n  const { window } = props;\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const drawer = (\r\n    <div onClick={handleDrawerToggle}>\r\n      <Toolbar />\r\n      <Divider />\r\n      <List>\r\n        <ListItem button to=\"/home\" component={Link}>\r\n          <ListItemText primary=\"Dashboard\" />\r\n        </ListItem>\r\n        {props.isAuth ? (\r\n          <ListItem button to=\"/wallet\" component={Link}>\r\n            Wallet\r\n          </ListItem>\r\n        ) : null}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {!props.isAuth ? (\r\n          <>\r\n            <ListItem button to=\"/login\" component={Link}>\r\n              <ListItemText primary=\"Login\" />\r\n            </ListItem>\r\n            <ListItem button to=\"/register\" component={Link}>\r\n              <ListItemText primary=\"Register\" />\r\n            </ListItem>\r\n          </>\r\n        ) : (\r\n          <ListItem button to=\"/home\" component={Link} onClick={props.logout}>\r\n            <ListItemText primary=\"Logout\" />\r\n          </ListItem>\r\n        )}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"static\"\r\n      sx={{\r\n        width: \"100%\",\r\n        mb: \"10px\",\r\n      }}\r\n    >\r\n      <Toolbar>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          edge=\"start\"\r\n          onClick={handleDrawerToggle}\r\n          sx={{ mr: 2 }}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <SearchInput />\r\n      </Toolbar>\r\n\r\n      <Box\r\n        component=\"nav\"\r\n        sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\r\n        aria-label=\"mailbox folders\"\r\n      >\r\n        <Drawer\r\n          container={container}\r\n          variant=\"temporary\"\r\n          open={mobileOpen}\r\n          onClose={handleDrawerToggle}\r\n          ModalProps={{\r\n            keepMounted: true, // Better open performance on mobile.\r\n          }}\r\n          sx={{\r\n            display: { xs: \"block\" },\r\n            \"& .MuiDrawer-paper\": {\r\n              boxSizing: \"border-box\",\r\n              width: drawerWidth,\r\n            },\r\n          }}\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n      </Box>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default SideNav;\r\n","import { createSlice, current } from \"@reduxjs/toolkit\";\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    isLoggedIn: false,\r\n    token: null,\r\n    localId: null,\r\n  },\r\n  reducers: {\r\n    logIn(state, action) {\r\n      state.isLoggedIn = true;\r\n      state.token = action.payload.token;\r\n    },\r\n    logOut(state, action) {\r\n      state.isLoggedIn = false;\r\n      state.token = null;\r\n      state.localId = null;\r\n    },\r\n    checkAuth(state, action) {\r\n      const token = action.payload.token;\r\n      const localId = action.payload.localId;\r\n      if (!token) {\r\n        state.isLoggedIn = false;\r\n        state.token = null;\r\n        state.localId = null;\r\n      } else {\r\n        state.isLoggedIn = true;\r\n        state.token = token;\r\n        state.localId = localId;\r\n      }\r\n    },\r\n  },\r\n});\r\nexport const authActions = authSlice.actions;\r\n\r\nexport default authSlice;\r\n","import React from \"react\";\r\nimport { Box } from \"@mui/material\";\r\n\r\nimport TopNav from \"./Navigation/TopNav\";\r\nimport SideNav from \"./Navigation/SideNav\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { authActions } from \"./store/auth-slice\";\r\n\r\nconst Header = () => {\r\n  const isAuth = useSelector((state) => state.auth.isLoggedIn);\r\n\r\n  const dispatch = useDispatch();\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"localId\");\r\n    dispatch(authActions.logOut());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\r\n        <TopNav isAuth={isAuth} logout={logout} />;\r\n      </Box>\r\n      <Box sx={{ display: { xs: \"flex\", md: \"none\" } }}>\r\n        <SideNav isAuth={isAuth} logout={logout} />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nimport { Grid } from \"@mui/material\";\r\n\r\nconst Footer = () => {\r\n  return <Grid container sx={{ marginBottom: \"30px\" }}></Grid>;\r\n};\r\n\r\nexport default Footer;\r\n","//libraries\r\nimport React, { Component } from \"react\";\r\nimport Header from \"../Header\";\r\nimport Footer from \"../Footer\";\r\n\r\nclass Layout extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <main>{this.props.children}</main>\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import { createSlice, current } from \"@reduxjs/toolkit\";\r\n\r\nconst walletSlice = createSlice({\r\n  name: \"wallet\",\r\n  initialState: {\r\n    items: [],\r\n    changed: false,\r\n  },\r\n  reducers: {\r\n    loadWallet(state, action) {\r\n      state.items = action.payload;\r\n    },\r\n    changeWalletStatus(state, action) {\r\n      state.changed = false;\r\n    },\r\n    addItemToWallet(state, action) {\r\n      const newItem = action.payload;\r\n      state.changed = true;\r\n      if (newItem.items !== null) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          title: newItem.title,\r\n          tokenName: newItem.tokenName,\r\n          tokenId: newItem.tokenId,\r\n          chain: newItem.chain,\r\n          imageUrl: newItem.imageUrl,\r\n          price: newItem.price,\r\n          round: newItem.round,\r\n          listingDate: newItem.listingDate,\r\n          inWallet: newItem.inWallet,\r\n        });\r\n      }\r\n    },\r\n    removeItemFromWallet(state, action) {\r\n      const id = action.payload.id;\r\n      state.changed = true;\r\n      state.items = state.items.filter((item) => item.id !== id);\r\n    },\r\n    addTokensToWallet(state, action) {\r\n      const tokenHoldings = action.payload.enteredTokens;\r\n      state.items.find((item) => item.id === action.payload.id).tokenHoldings =\r\n        tokenHoldings;\r\n      state.changed = true;\r\n    },\r\n  },\r\n});\r\nexport const walletActions = walletSlice.actions;\r\n\r\nexport default walletSlice;\r\n","import { useDispatch } from \"react-redux\";\r\nimport React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Avatar,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Link,\r\n  IconButton,\r\n} from \"@mui/material\";\r\n\r\nimport StarBorderOutlinedIcon from \"@mui/icons-material/StarBorderOutlined\";\r\nimport LanguageIcon from \"@mui/icons-material/Language\";\r\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\r\nimport TelegramIcon from \"@mui/icons-material/Telegram\";\r\nimport AssessmentIcon from \"@mui/icons-material/Assessment\";\r\n\r\nimport { walletActions } from \"./store/wallet-slice\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst CryptoCard = (props) => {\r\n  const {\r\n    id,\r\n    title,\r\n    tokenName,\r\n    chain,\r\n    imageUrl,\r\n    price,\r\n    round,\r\n    listingDate,\r\n    webPage,\r\n    twitterPage,\r\n    telegram,\r\n    chart,\r\n    vesting,\r\n    tokenId,\r\n  } = props.data;\r\n\r\n  const dispatch = useDispatch();\r\n  const isAuth = useSelector((state) => {\r\n    return state.auth.isLoggedIn;\r\n  });\r\n\r\n  const [currentPrice, setCurrentPrice] = useState(\"\");\r\n\r\n  const addToWallet = () => {\r\n    // dispatch(productsActions.addItemToWallet({ id }));\r\n    dispatch(walletActions.addItemToWallet(props.data));\r\n  };\r\n\r\n  const removeFromWallet = () => {\r\n    // dispatch(productsActions.removeItemFromWallet({ id }));\r\n    dispatch(walletActions.removeItemFromWallet({ id }));\r\n  };\r\n\r\n  const checkPrice = () => {\r\n    let url = `https://api.coingecko.com/api/v3/simple/price?ids=${tokenId}%2C&vs_currencies=usd%2C`;\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    fetch(url, requestOptions)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json().then((data) => {\r\n            setCurrentPrice(data[tokenId].usd);\r\n          });\r\n        } else {\r\n          return response.json().then((data) => {\r\n            console.log(data.error.message);\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkPrice();\r\n  }, []);\r\n\r\n  let walletButton;\r\n\r\n  if (props.inWallet) {\r\n    walletButton = (\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={addToWallet}\r\n        style={{ marginBottom: \"12px\" }}\r\n      >\r\n        Add to wallet\r\n      </Button>\r\n    );\r\n  } else {\r\n    walletButton = (\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={removeFromWallet}\r\n        style={{ marginBottom: \"12px\" }}\r\n      >\r\n        Remove from wallet\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Grid item xs={12} sm={6} md={4}>\r\n      <Card>\r\n        <CardHeader\r\n          avatar={<Avatar src={imageUrl} />}\r\n          action={\r\n            <IconButton aria-label=\"settings\">\r\n              <StarBorderOutlinedIcon />\r\n            </IconButton>\r\n          }\r\n          title={title}\r\n          subheader={tokenName}\r\n        />\r\n        <CardContent>\r\n          <Grid container alignItems=\"center\">\r\n            <Typography variant=\"h6\" component=\"h6\">\r\n              Round:\r\n            </Typography>\r\n            <Typography variant=\"body1\" component=\"p\" sx={{ margin: \"0 10px\" }}>\r\n              {round}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid container alignItems=\"center\">\r\n            <Typography variant=\"h6\" component=\"h6\">\r\n              Round price:\r\n            </Typography>\r\n            <Typography variant=\"body1\" component=\"p\" sx={{ margin: \"0 10px\" }}>\r\n              {price}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid container alignItems=\"center\">\r\n            <Typography variant=\"h6\" component=\"h6\">\r\n              Chain:\r\n            </Typography>\r\n            <Typography variant=\"body1\" component=\"p\" sx={{ margin: \"0 10px\" }}>\r\n              {chain}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid container alignItems=\"center\">\r\n            <Typography variant=\"h6\" component=\"h6\">\r\n              Listing date:\r\n            </Typography>\r\n            <Typography variant=\"body1\" component=\"p\" sx={{ margin: \"0 10px\" }}>\r\n              {listingDate}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid container alignItems=\"center\">\r\n            <Typography variant=\"h6\" component=\"h6\">\r\n              Current price:\r\n            </Typography>\r\n            <Typography variant=\"body1\" component=\"p\" sx={{ margin: \"0 10px\" }}>\r\n              {currentPrice} $\r\n            </Typography>\r\n          </Grid>\r\n          <Box m={2}>\r\n            <Typography variant=\"h5\" align=\"center\">\r\n              Links\r\n            </Typography>\r\n          </Box>\r\n          <Grid container justifyContent=\"space-between\">\r\n            <Link href={webPage} target=\"_blank\">\r\n              <LanguageIcon />\r\n            </Link>\r\n            <Link href={twitterPage} target=\"_blank\">\r\n              <TwitterIcon />\r\n            </Link>\r\n            <Link href={telegram} target=\"_blank\">\r\n              <TelegramIcon />\r\n            </Link>\r\n            <Link href={chart} target=\"_blank\">\r\n              <AssessmentIcon />\r\n            </Link>\r\n          </Grid>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Grid container justifyContent=\"space-evenly\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ marginBottom: \"12px\" }}\r\n            >\r\n              <Link\r\n                href={vesting}\r\n                target=\"_blank\"\r\n                color=\"inherit\"\r\n                underline=\"none\"\r\n              >\r\n                Vesting\r\n              </Link>\r\n            </Button>\r\n            {isAuth ? walletButton : null}\r\n          </Grid>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CryptoCard;\r\n","import { walletActions } from \"./wallet-slice\";\r\n\r\nexport const sendWalletData = (itemData) => {\r\n  console.log(itemData);\r\n  return async (dispatch) => {\r\n    const fetchData = async () => {\r\n      const token = localStorage.getItem(\"token\");\r\n      const userId = localStorage.getItem(\"localId\");\r\n      let url =\r\n        `https://crypto-vesting-default-rtdb.europe-west1.firebasedatabase.app/users/${userId}.json?auth=` +\r\n        token;\r\n      const requestOptions = {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(itemData),\r\n      };\r\n      const response = await fetch(url, requestOptions);\r\n      if (!response.ok) {\r\n        throw new Error(\"Could not fetch products data!\");\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    };\r\n    try {\r\n      const itemData = await fetchData();\r\n      dispatch(walletActions.changeWalletStatus());\r\n      return itemData;\r\n    } catch (error) {\r\n      console.log(error);\r\n      // dispatch(\r\n      //   productsActions.showNotification({\r\n      //     status: \"error\",\r\n      //     title: \"Error...\",\r\n      //     message: \"fetching cart data failed!\",\r\n      //   })\r\n      // );\r\n      return error;\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchWalletData = () => {\r\n  return async (dispatch) => {\r\n    const fetchData = async () => {\r\n      const token = localStorage.getItem(\"token\");\r\n      const userId = localStorage.getItem(\"localId\");\r\n      let url =\r\n        `https://crypto-vesting-default-rtdb.europe-west1.firebasedatabase.app/users/${userId}.json?auth=` +\r\n        token;\r\n      const requestOptions = {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n      const response = await fetch(url, requestOptions);\r\n      if (!response.ok) {\r\n        throw new Error(\"Could not fetch products data!\");\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    };\r\n    try {\r\n      const walletData = await fetchData();\r\n      dispatch(walletActions.loadWallet(walletData || []));\r\n    } catch (error) {\r\n      console.log(error);\r\n      // dispatch(\r\n      //   productsActions.showNotification({\r\n      //     status: \"error\",\r\n      //     title: \"Error...\",\r\n      //     message: \"fetching cart data failed!\",\r\n      //   })\r\n      // );\r\n      return error;\r\n    }\r\n  };\r\n};\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport React from \"react\";\r\nimport { Grid } from \"@mui/material\";\r\nimport CryptoCard from \"./CryptoCard\";\r\n\r\nimport { fetchProductData } from \"./store/products-actions\";\r\nimport { sendWalletData } from \"./store/wallet-actions\";\r\nimport { fetchWalletData } from \"./store/wallet-actions\";\r\n\r\nconst Content = () => {\r\n  const dispatch = useDispatch();\r\n  const isInitial = useSelector((state) => {\r\n    return state.products.isInitial;\r\n  });\r\n  const productItems = useSelector((state) => {\r\n    return state.products.items;\r\n  });\r\n  const enteredFilter = useSelector((state) => {\r\n    return state.products.enteredFilter;\r\n  });\r\n  const products = productItems.filter((item) =>\r\n    item.title.toLowerCase().includes(enteredFilter)\r\n  );\r\n  const wallet = useSelector((state) => {\r\n    return state.wallet;\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (wallet.changed) {\r\n      dispatch(sendWalletData(wallet.items));\r\n    }\r\n  }, [wallet, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (isInitial) {\r\n      dispatch(fetchProductData());\r\n      dispatch(fetchWalletData());\r\n    }\r\n  }, [dispatch, isInitial]);\r\n\r\n  return (\r\n    <Grid item container>\r\n      <Grid item xs={false} sm={1} md={2}></Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        sm={10}\r\n        md={8}\r\n        container\r\n        rowSpacing={2}\r\n        columnSpacing={2}\r\n      >\r\n        {products.map((data) => {\r\n          const inWallet = wallet.items.find((item) => item.id === data.id);\r\n          return (\r\n            <CryptoCard\r\n              key={data.id}\r\n              data={data}\r\n              inWallet={inWallet ? false : true}\r\n            />\r\n          );\r\n        })}\r\n      </Grid>\r\n      <Grid item xs={false} sm={1} md={2}></Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import { productsActions } from \"./products-slice\";\r\n\r\nexport const fetchProductData = () => {\r\n  return async (dispatch) => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(\r\n        \"https://crypto-vesting-default-rtdb.europe-west1.firebasedatabase.app/products.json\"\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Could not fetch products data!\");\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    };\r\n    try {\r\n      const productsData = await fetchData();\r\n      dispatch(\r\n        productsActions.loadProducts({\r\n          items: productsData || [],\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n      // dispatch(\r\n      //   productsActions.showNotification({\r\n      //     status: \"error\",\r\n      //     title: \"Error...\",\r\n      //     message: \"fetching cart data failed!\",\r\n      //   })\r\n      // );\r\n      return error;\r\n    }\r\n  };\r\n};\r\n","import { useDispatch } from \"react-redux\";\r\nimport React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Avatar,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Link,\r\n  IconButton,\r\n  Input,\r\n} from \"@mui/material\";\r\n\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DoneIcon from \"@mui/icons-material/Done\";\r\n\r\nimport StarBorderOutlinedIcon from \"@mui/icons-material/StarBorderOutlined\";\r\n// import LanguageIcon from \"@mui/icons-material/Language\";\r\n// import TwitterIcon from \"@mui/icons-material/Twitter\";\r\n// import TelegramIcon from \"@mui/icons-material/Telegram\";\r\n// import AssessmentIcon from \"@mui/icons-material/Assessment\";\r\n\r\nimport { walletActions } from \"./store/wallet-slice\";\r\n\r\nconst WalletCard = (props) => {\r\n  console.log(props);\r\n  const {\r\n    id,\r\n    title,\r\n    tokenName,\r\n    chain,\r\n    imageUrl,\r\n    price,\r\n    round,\r\n    listingDate,\r\n    vesting,\r\n    tokenId,\r\n    tokenHoldings,\r\n  } = props.data;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [currentPrice, setCurrentPrice] = useState(\"\");\r\n  const [editTokens, setEditable] = useState(true);\r\n  const [enteredTokens, setEnteredTokens] = useState(tokenHoldings || \"0\");\r\n\r\n  const tokensHandler = (event) => {\r\n    setEnteredTokens(event.target.value);\r\n  };\r\n\r\n  const removeFromWallet = () => {\r\n    dispatch(walletActions.removeItemFromWallet({ id }));\r\n  };\r\n\r\n  const editHandler = () => {\r\n    setEditable(!editTokens);\r\n  };\r\n\r\n  const addTokensToWallet = () => {\r\n    dispatch(walletActions.addTokensToWallet({ id, enteredTokens }));\r\n    editHandler();\r\n  };\r\n\r\n  const checkPrice = () => {\r\n    let url = `https://api.coingecko.com/api/v3/simple/price?ids=${tokenId}%2C&vs_currencies=usd%2C`;\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    fetch(url, requestOptions)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json().then((data) => {\r\n            setCurrentPrice(data[tokenId].usd);\r\n          });\r\n        } else {\r\n          return response.json().then((data) => {\r\n            console.log(data.error.message);\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkPrice();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid item xs={12} sm={6} md={4}>\r\n      <Card>\r\n        <CardHeader\r\n          avatar={<Avatar src={imageUrl} />}\r\n          action={\r\n            <IconButton aria-label=\"settings\">\r\n              <StarBorderOutlinedIcon />\r\n            </IconButton>\r\n          }\r\n          title={title}\r\n          subheader={tokenName}\r\n        />\r\n        <CardContent>\r\n          <Grid container alignItems=\"center\">\r\n            <Typography variant=\"h6\" component=\"h6\">\r\n              Round:\r\n            </Typography>\r\n            <Typography variant=\"body1\" component=\"p\" sx={{ margin: \"0 10px\" }}>\r\n              {round}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid container alignItems=\"center\">\r\n            <Typography variant=\"h6\" component=\"h6\">\r\n              Round price:\r\n            </Typography>\r\n            <Typography variant=\"body1\" component=\"p\" sx={{ margin: \"0 10px\" }}>\r\n              {price}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid container alignItems=\"center\">\r\n            <Typography variant=\"h6\" component=\"h6\">\r\n              Chain:\r\n            </Typography>\r\n            <Typography variant=\"body1\" component=\"p\" sx={{ margin: \"0 10px\" }}>\r\n              {chain}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid container alignItems=\"center\">\r\n            <Typography variant=\"h6\" component=\"h6\">\r\n              Listing date:\r\n            </Typography>\r\n            <Typography variant=\"body1\" component=\"p\" sx={{ margin: \"0 10px\" }}>\r\n              {listingDate}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid container alignItems=\"center\">\r\n            <Typography variant=\"h6\" component=\"h6\">\r\n              Current price:\r\n            </Typography>\r\n            <Typography variant=\"body1\" component=\"p\" sx={{ margin: \"0 10px\" }}>\r\n              {currentPrice} $\r\n            </Typography>\r\n          </Grid>\r\n          <Grid container alignItems=\"center\">\r\n            <Typography variant=\"h6\" component=\"h6\">\r\n              Holdings:\r\n            </Typography>\r\n            {editTokens ? (\r\n              <Typography\r\n                variant=\"body1\"\r\n                component=\"p\"\r\n                sx={{\r\n                  margin: \"0 10px\",\r\n                  flexGrow: 1,\r\n                }}\r\n              >\r\n                {enteredTokens}\r\n              </Typography>\r\n            ) : (\r\n              <Input\r\n                placeholder={enteredTokens}\r\n                type=\"number\"\r\n                sx={{\r\n                  flexGrow: 1,\r\n                }}\r\n                onChange={tokensHandler}\r\n                value={enteredTokens}\r\n              />\r\n            )}\r\n            {editTokens ? (\r\n              <EditIcon onClick={editHandler} />\r\n            ) : (\r\n              <DoneIcon onClick={addTokensToWallet} />\r\n            )}\r\n          </Grid>\r\n          <Box m={2}>\r\n            <Typography variant=\"h5\" align=\"center\">\r\n              Your current value\r\n            </Typography>\r\n            <Typography variant=\"h6\" align=\"center\">\r\n              {currentPrice * enteredTokens} $\r\n            </Typography>\r\n          </Box>\r\n          {/* <Grid container justifyContent=\"space-between\">\r\n            <Link href={webPage} target=\"_blank\">\r\n              <LanguageIcon />\r\n            </Link>\r\n            <Link href={twitterPage} target=\"_blank\">\r\n              <TwitterIcon />\r\n            </Link>\r\n            <Link href={telegram} target=\"_blank\">\r\n              <TelegramIcon />\r\n            </Link>\r\n            <Link href={chart} target=\"_blank\">\r\n              <AssessmentIcon />\r\n            </Link>\r\n          </Grid> */}\r\n        </CardContent>\r\n        <CardActions>\r\n          <Grid container justifyContent=\"space-evenly\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ marginBottom: \"12px\" }}\r\n            >\r\n              <Link\r\n                href={vesting}\r\n                target=\"_blank\"\r\n                color=\"inherit\"\r\n                underline=\"none\"\r\n              >\r\n                Vesting\r\n              </Link>\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={removeFromWallet}\r\n              style={{ marginBottom: \"12px\" }}\r\n            >\r\n              Remove from wallet\r\n            </Button>\r\n          </Grid>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default WalletCard;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport React from \"react\";\r\nimport { Grid } from \"@mui/material\";\r\nimport WalletCard from \"./WalletCard\";\r\n\r\nimport { fetchWalletData } from \"./store/wallet-actions\";\r\nimport { sendWalletData } from \"./store/wallet-actions\";\r\n\r\nconst Wallet = () => {\r\n  const dispatch = useDispatch();\r\n  const wallet = useSelector((state) => {\r\n    return state.wallet;\r\n  });\r\n  // const enteredFilter = useSelector((state) => {\r\n  //   return state.products.enteredFilter;\r\n  // });\r\n  // const products = productItems.filter((item) =>\r\n  //   item.title.toLowerCase().includes(enteredFilter)\r\n  // );\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchWalletData());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (wallet.changed) {\r\n      dispatch(sendWalletData(wallet.items));\r\n    }\r\n  }, [wallet, dispatch]);\r\n\r\n  return (\r\n    <Grid item container>\r\n      <Grid item xs={false} sm={1} md={2}></Grid>\r\n      <Grid item xs={12} sm={10} md={8} container spacing={4}>\r\n        {wallet.items.map((data) => {\r\n          return <WalletCard key={data.id} data={data} />;\r\n        })}\r\n      </Grid>\r\n      <Grid item xs={false} sm={1} md={2}></Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Wallet;\r\n","import { Input, Grid, Button, Box } from \"@mui/material\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport { authActions } from \"./store/auth-slice\";\r\n\r\nimport { useNavigate } from \"react-router\";\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\r\n  const [emailIsValid, setEmailIsValid] = useState(true);\r\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\r\n  const [passwordIsValid, setPasswordIsValid] = useState(true);\r\n  const [formIsValid, setFormIsValid] = useState(true);\r\n\r\n  const emailChangeHandler = (event) => {\r\n    setEnteredEmail(event.target.value);\r\n    setEmailIsValid(\r\n      event.target.value.trim().length === 0 || event.target.value.includes(\"@\")\r\n    );\r\n  };\r\n\r\n  const emailPasswordHandler = (event) => {\r\n    setEnteredPassword(event.target.value);\r\n    setPasswordIsValid(\r\n      event.target.value.trim().length === 0 ||\r\n        event.target.value.trim().length > 3\r\n    );\r\n  };\r\n\r\n  const checkFormIsValid = () => {\r\n    setFormIsValid(\r\n      emailIsValid &&\r\n        passwordIsValid &&\r\n        enteredEmail.trim().length > 0 &&\r\n        enteredPassword.trim().length > 0\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkFormIsValid();\r\n  });\r\n\r\n  const login = async () => {\r\n    let url = process.env.REACT_APP_LOGIN_API;\r\n\r\n    const authData = {\r\n      email: enteredEmail,\r\n      password: enteredPassword,\r\n      returnSecureToken: true,\r\n    };\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(authData),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, requestOptions);\r\n      if (!response.ok) {\r\n        return response.json().then((data) => {\r\n          console.log(data.error.message);\r\n        });\r\n      }\r\n      const loginData = await response.json();\r\n      const token = loginData.idToken;\r\n      const localId = loginData.localId;\r\n      localStorage.setItem(\"token\", token);\r\n      localStorage.setItem(\"localId\", localId);\r\n      dispatch(authActions.logIn({ token, localId }));\r\n      navigate(\"/home\");\r\n    } catch (error) {\r\n      console.log(error);\r\n      return error;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid item xs={1} sm={2} md={4}></Grid>\r\n        <Grid item xs={10} sm={8} md={4} container direction=\"column\">\r\n          <Box component=\"form\" autoComplete=\"off\">\r\n            <Input\r\n              placeholder=\"Login\"\r\n              id=\"login\"\r\n              label=\"login\"\r\n              type=\"email\"\r\n              fullWidth\r\n              value={enteredEmail}\r\n              onChange={emailChangeHandler}\r\n              error={!emailIsValid}\r\n            />\r\n            <Input\r\n              placeholder=\"Password\"\r\n              id=\"password\"\r\n              label=\"password\"\r\n              type=\"password\"\r\n              fullWidth\r\n              value={enteredPassword}\r\n              onChange={emailPasswordHandler}\r\n              error={!passwordIsValid}\r\n            />\r\n            <Box mt={1}>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                disabled={!formIsValid}\r\n                onClick={login}\r\n              >\r\n                Login\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={1} sm={2} md={4}></Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { Input, Grid, Button, Box } from \"@mui/material\";\r\n\r\n// import { useDispatch } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport { useNavigate } from \"react-router\";\r\n\r\nconst Register = () => {\r\n  // const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\r\n  const [emailIsValid, setEmailIsValid] = useState(true);\r\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\r\n  const [passwordIsValid, setPasswordIsValid] = useState(true);\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const emailChangeHandler = (event) => {\r\n    setEnteredEmail(event.target.value);\r\n    setEmailIsValid(\r\n      event.target.value.trim().length === 0 || event.target.value.includes(\"@\")\r\n    );\r\n  };\r\n\r\n  const emailPasswordHandler = (event) => {\r\n    setEnteredPassword(event.target.value);\r\n    setPasswordIsValid(\r\n      event.target.value.trim().length === 0 ||\r\n        event.target.value.trim().length > 3\r\n    );\r\n  };\r\n\r\n  const checkFormIsValid = () => {\r\n    setFormIsValid(\r\n      emailIsValid &&\r\n        passwordIsValid &&\r\n        enteredEmail.trim().length > 0 &&\r\n        enteredPassword.trim().length > 0\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkFormIsValid();\r\n  });\r\n\r\n  const register = async () => {\r\n    let url = process.env.REACT_APP_REGISTER_API;\r\n    const authData = {\r\n      email: enteredEmail,\r\n      password: enteredPassword,\r\n      returnSecureToken: true,\r\n    };\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(authData),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, requestOptions);\r\n      if (!response.ok) {\r\n        return response.json().then((data) => {\r\n          console.log(data.error.message);\r\n        });\r\n      }\r\n      navigate(\"/login\");\r\n      // return response.json().then((data) => {\r\n      //   const token = data.idToken;\r\n      //   const userId = data.localId;\r\n      //   fetch(\r\n      //     `https://crypto-vesting-default-rtdb.europe-west1.firebasedatabase.app/users.json?auth=` +\r\n      //       token,\r\n      //     {\r\n      //       method: \"POST\",\r\n      //       body: JSON.stringify({ userId: userId }),\r\n      //     }\r\n      //   )\r\n      //     .then((response) => response.json())\r\n      //     .then((json) => console.log(json))\r\n      //     .catch((err) => console.log(err));\r\n      // });\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid item xs={1} sm={2} md={4}></Grid>\r\n        <Grid item xs={10} sm={8} md={4} container direction=\"column\">\r\n          <Box component=\"form\" autoComplete=\"on\">\r\n            <Input\r\n              placeholder=\"Login\"\r\n              id=\"login\"\r\n              label=\"login\"\r\n              type=\"email\"\r\n              fullWidth\r\n              value={enteredEmail}\r\n              onChange={emailChangeHandler}\r\n              error={!emailIsValid}\r\n            />\r\n            <Input\r\n              placeholder=\"Password\"\r\n              id=\"password\"\r\n              label=\"password\"\r\n              type=\"password\"\r\n              fullWidth\r\n              value={enteredPassword}\r\n              onChange={emailPasswordHandler}\r\n              error={!passwordIsValid}\r\n            />\r\n            <Box mt={1}>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                disabled={!formIsValid}\r\n                onClick={register}\r\n              >\r\n                Register\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={1} sm={2} md={4}></Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import Layout from \"./Layout/Layout\";\r\nimport Content from \"./Content\";\r\nimport Wallet from \"./Wallet\";\r\nimport Login from \"./Login\";\r\nimport Register from \"./Register\";\r\nimport { Route, Routes, Navigate } from \"react-router-dom\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport { authActions } from \"./store/auth-slice\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const isAuth = useSelector((state) => state.auth.isLoggedIn);\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const localId = localStorage.getItem(\"localId\");\r\n    dispatch(authActions.checkAuth({ token, localId }));\r\n  }, [dispatch]);\r\n\r\n  let routes = (\r\n    <Routes>\r\n      <Route path=\"/home\" element={<Content />} />\r\n      <Route path=\"/login\" element={<Login />} />\r\n      <Route path=\"/register\" element={<Register />} />\r\n      <Route path=\"/\" element={<Navigate replace to=\"/home\" />} />\r\n    </Routes>\r\n  );\r\n\r\n  if (isAuth) {\r\n    routes = (\r\n      <Routes>\r\n        <Route path=\"/home\" element={<Content />} />\r\n        <Route path=\"/wallet\" element={<Wallet />} />\r\n        <Route path=\"/\" element={<Navigate replace to=\"/home\" />} />\r\n      </Routes>\r\n    );\r\n  }\r\n  return <Layout>{routes}</Layout>;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport walletSlice from \"./wallet-slice\";\r\nimport productsSlice from \"./products-slice\";\r\nimport authSlice from \"./auth-slice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    products: productsSlice.reducer,\r\n    wallet: walletSlice.reducer,\r\n    auth: authSlice.reducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport store from \"./store/index\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}