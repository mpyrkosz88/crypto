{"version":3,"sources":["store/auth-slice.js","Header.js","Layout/Layout.js","store/wallet-slice.js","store/products-slice.js","CryptoCard.js","Content.js","store/products-actions.js","Wallet.js","Login.js","App.js","reportWebVitals.js","store/index.js","index.js"],"names":["authSlice","createSlice","name","initialState","isLoggedIn","token","reducers","logIn","state","action","console","log","current","payload","logOut","checkAuth","authActions","actions","useStyles","makeStyles","theme","appBar","marginBottom","spacing","search","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginRight","marginLeft","width","breakpoints","up","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","link","color","fontSize","inputInput","paddingLeft","transition","transitions","create","Header","classes","isAuth","useSelector","auth","dispatch","useDispatch","AppBar","root","Toolbar","Grid","container","item","xs","MenuItem","to","component","Link","className","InputBase","placeholder","input","inputProps","onClick","localStorage","removeItem","Layout","this","props","children","Component","walletSlice","items","addItemToWallet","newItem","push","id","title","tokenName","chain","imageUrl","price","round","listingDate","inWallet","removeItemFromWallet","filter","walletActions","productsSlice","isInitial","loadProducts","find","productsActions","margin","CryptoCard","walletButton","webPage","twitterPage","telegram","chart","vesting","Button","variant","style","sm","md","Card","CardHeader","avatar","Avatar","src","IconButton","subheader","CardContent","Typography","Box","m","align","href","target","CardActions","underline","Content","productItems","products","useEffect","a","fetchData","fetch","response","ok","Error","json","data","productsData","map","Wallet","walletItems","wallet","Login","navigate","useNavigate","useState","enteredEmail","setEnteredEmail","emailIsValid","setEmailIsValid","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","trim","length","direction","autoComplete","Input","label","type","fullWidth","value","onChange","event","includes","error","mt","disabled","setItem","getItem","App","storedToken","routes","path","element","replace","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc015c63.chunk.js","sourcesContent":["import { createSlice, current } from \"@reduxjs/toolkit\";\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    isLoggedIn: false,\r\n    token: null,\r\n  },\r\n  reducers: {\r\n    logIn(state, action) {\r\n      console.log(current(state));\r\n      state.isLoggedIn = true;\r\n      state.token = action.payload.token;\r\n    },\r\n    logOut(state, action) {\r\n      state.isLoggedIn = false;\r\n      state.token = null;\r\n    },\r\n    checkAuth(state, action) {\r\n      const token = action.payload;\r\n      if (token === \"1\") {\r\n        console.log(\"jestes zalogowany\");\r\n        state.isLoggedIn = true;\r\n      } else {\r\n        console.log(\"nie jestes zalogowany\");\r\n        state.isLoggedIn = false;\r\n      }\r\n    },\r\n  },\r\n});\r\nexport const authActions = authSlice.actions;\r\n\r\nexport default authSlice;\r\n","import React from \"react\";\r\n\r\nimport { AppBar, Toolbar, InputBase, Grid, MenuItem } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { alpha, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { authActions } from \"./store/auth-slice\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  link: {\r\n    color: \"white\",\r\n    padding: \"0 10px\",\r\n    fontSize: \"20px\",\r\n  },\r\n  inputInput: {\r\n    color: \"white\",\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n  const isAuth = useSelector((state) => state.auth.isLoggedIn);\r\n  const dispatch = useDispatch();\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"isLoggedIn\");\r\n    dispatch(authActions.logOut());\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\" classes={{ root: classes.appBar }}>\r\n      <Toolbar>\r\n        <Grid container>\r\n          <Grid container item xs={8}>\r\n            <MenuItem\r\n              color=\"textPrimary\"\r\n              to=\"/home\"\r\n              classes={{ root: classes.link }}\r\n              component={Link}\r\n            >\r\n              Dashboard\r\n            </MenuItem>\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder=\"Search…\"\r\n                classes={{\r\n                  input: classes.inputInput,\r\n                }}\r\n                inputProps={{ \"aria-label\": \"search\" }}\r\n              />\r\n            </div>\r\n            {isAuth ? (\r\n              <MenuItem\r\n                color=\"textPrimary\"\r\n                to=\"/wallet\"\r\n                classes={{ root: classes.link }}\r\n                component={Link}\r\n              >\r\n                Wallet\r\n              </MenuItem>\r\n            ) : null}\r\n          </Grid>\r\n          <Grid container item xs={4} justifyContent=\"flex-end\">\r\n            {!isAuth ? (\r\n              <>\r\n                <MenuItem\r\n                  to=\"/login\"\r\n                  classes={{ root: classes.link }}\r\n                  component={Link}\r\n                >\r\n                  Login\r\n                </MenuItem>\r\n                <MenuItem\r\n                  color=\"textPrimary\"\r\n                  to=\"/register\"\r\n                  classes={{ root: classes.link }}\r\n                  component={Link}\r\n                >\r\n                  Register\r\n                </MenuItem>\r\n              </>\r\n            ) : (\r\n              <MenuItem\r\n                color=\"textPrimary\"\r\n                to=\"/home\"\r\n                classes={{ root: classes.link }}\r\n                component={Link}\r\n                onClick={logout}\r\n              >\r\n                Logout\r\n              </MenuItem>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","//libraries\r\nimport React, { Component } from \"react\";\r\nimport Header from \"../Header\";\r\n\r\nclass Layout extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <main>{this.props.children}</main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst walletSlice = createSlice({\r\n  name: \"wallet\",\r\n  initialState: {\r\n    items: [],\r\n  },\r\n  reducers: {\r\n    addItemToWallet(state, action) {\r\n      const newItem = action.payload;\r\n      state.items.push({\r\n        id: newItem.id,\r\n        title: newItem.title,\r\n        tokenName: newItem.tokenName,\r\n        chain: newItem.chain,\r\n        imageUrl: newItem.imageUrl,\r\n        price: newItem.price,\r\n        round: newItem.round,\r\n        listingDate: newItem.listingDate,\r\n        inWallet: newItem.inWallet,\r\n      });\r\n    },\r\n    removeItemFromWallet(state, action) {\r\n      const id = action.payload.id;\r\n      state.items = state.items.filter((item) => item.id !== id);\r\n    },\r\n  },\r\n});\r\nexport const walletActions = walletSlice.actions;\r\n\r\nexport default walletSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n// import data from \"../data\";\r\n\r\nconst productsSlice = createSlice({\r\n  name: \"products\",\r\n  initialState: {\r\n    items: [],\r\n    isInitial: true,\r\n  },\r\n  reducers: {\r\n    loadProducts(state, action) {\r\n      state.items = action.payload.items;\r\n      state.isInitial = false;\r\n    },\r\n    addItemToWallet(state, action) {\r\n      const id = action.payload.id;\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n      existingItem.inWallet = true;\r\n    },\r\n    removeItemFromWallet(state, action) {\r\n      const id = action.payload.id;\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n      existingItem.inWallet = false;\r\n    },\r\n  },\r\n});\r\nexport const productsActions = productsSlice.actions;\r\n\r\nexport default productsSlice;\r\n","import { useDispatch } from \"react-redux\";\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Avatar,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Link,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\n\r\nimport StarBorderOutlinedIcon from \"@material-ui/icons/StarBorderOutlined\";\r\nimport LanguageIcon from \"@material-ui/icons/Language\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport TelegramIcon from \"@material-ui/icons/Telegram\";\r\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\r\n\r\nimport { walletActions } from \"./store/wallet-slice\";\r\nimport { productsActions } from \"./store/products-slice\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles({\r\n  spacing: {\r\n    margin: \"0 10px\",\r\n  },\r\n});\r\n\r\nconst CryptoCard = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    id,\r\n    title,\r\n    tokenName,\r\n    chain,\r\n    imageUrl,\r\n    price,\r\n    round,\r\n    listingDate,\r\n    webPage,\r\n    twitterPage,\r\n    telegram,\r\n    chart,\r\n    vesting,\r\n    inWallet,\r\n  } = props.item;\r\n\r\n  const dispatch = useDispatch();\r\n  const isAuth = useSelector((state) => {\r\n    return state.auth.isLoggedIn;\r\n  });\r\n\r\n  const addToWallet = () => {\r\n    dispatch(productsActions.addItemToWallet({ id }));\r\n    dispatch(\r\n      walletActions.addItemToWallet({\r\n        id,\r\n        title,\r\n        tokenName,\r\n        chain,\r\n        imageUrl,\r\n        price,\r\n        round,\r\n        listingDate,\r\n        webPage,\r\n        twitterPage,\r\n        telegram,\r\n        chart,\r\n        vesting,\r\n        inWallet: true,\r\n      })\r\n    );\r\n  };\r\n\r\n  const removeFromWallet = () => {\r\n    dispatch(productsActions.removeItemFromWallet({ id }));\r\n    dispatch(walletActions.removeItemFromWallet({ id }));\r\n  };\r\n\r\n  let walletButton;\r\n\r\n  if (!inWallet) {\r\n    walletButton = (\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={addToWallet}\r\n        style={{ marginBottom: \"12px\" }}\r\n      >\r\n        Add to wallet\r\n      </Button>\r\n    );\r\n  } else {\r\n    walletButton = (\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={removeFromWallet}\r\n        style={{ marginBottom: \"12px\" }}\r\n      >\r\n        Remove from wallet\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Grid item xs={12} sm={6} md={4}>\r\n      <Card>\r\n        <CardHeader\r\n          avatar={<Avatar src={imageUrl} />}\r\n          action={\r\n            <IconButton aria-label=\"settings\">\r\n              <StarBorderOutlinedIcon />\r\n            </IconButton>\r\n          }\r\n          title={title}\r\n          subheader={tokenName}\r\n        />\r\n        <CardContent>\r\n          <Grid container alignItems=\"center\">\r\n            <Typography variant=\"h6\" component=\"h6\">\r\n              Round:\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body1\"\r\n              component=\"p\"\r\n              className={classes.spacing}\r\n            >\r\n              {round}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid container alignItems=\"center\">\r\n            <Typography variant=\"h6\" component=\"h6\">\r\n              Round price:\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body1\"\r\n              component=\"p\"\r\n              className={classes.spacing}\r\n            >\r\n              {price}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid container alignItems=\"center\">\r\n            <Typography variant=\"h6\" component=\"h6\">\r\n              Chain:\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body1\"\r\n              component=\"p\"\r\n              className={classes.spacing}\r\n            >\r\n              {chain}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid container alignItems=\"center\">\r\n            <Typography variant=\"h6\" component=\"h6\">\r\n              Listing date:\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body1\"\r\n              component=\"p\"\r\n              className={classes.spacing}\r\n            >\r\n              {listingDate}\r\n            </Typography>\r\n          </Grid>\r\n          <Box m={2}>\r\n            <Typography variant=\"h5\" align=\"center\">\r\n              Links\r\n            </Typography>\r\n          </Box>\r\n          <Grid container justifyContent=\"space-between\">\r\n            <Link href={webPage} target=\"_blank\">\r\n              <LanguageIcon />\r\n            </Link>\r\n            <Link href={twitterPage} target=\"_blank\">\r\n              <TwitterIcon />\r\n            </Link>\r\n            <Link href={telegram} target=\"_blank\">\r\n              <TelegramIcon />\r\n            </Link>\r\n            <Link href={chart} target=\"_blank\">\r\n              <AssessmentIcon />\r\n            </Link>\r\n          </Grid>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Grid container justifyContent=\"space-evenly\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ marginBottom: \"12px\" }}\r\n            >\r\n              <Link\r\n                href={vesting}\r\n                target=\"_blank\"\r\n                color=\"inherit\"\r\n                underline=\"none\"\r\n              >\r\n                Vesting\r\n              </Link>\r\n            </Button>\r\n            {isAuth ? walletButton : null}\r\n          </Grid>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CryptoCard;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport CryptoCard from \"./CryptoCard\";\r\n\r\nimport { fetchProductData } from \"./store/products-actions\";\r\n\r\nconst Content = () => {\r\n  const dispatch = useDispatch();\r\n  const productItems = useSelector((state) => {\r\n    return state.products.items;\r\n  });\r\n  const isInitial = useSelector((state) => {\r\n    return state.products.isInitial;\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isInitial) {\r\n      dispatch(fetchProductData());\r\n    }\r\n  }, [dispatch, isInitial]);\r\n\r\n  return (\r\n    <Grid item container>\r\n      <Grid item xs={false} sm={1} md={2}></Grid>\r\n      <Grid item xs={12} sm={10} md={8} container spacing={4}>\r\n        {productItems.map((item) => {\r\n          return <CryptoCard key={item.id} item={item} />;\r\n        })}\r\n      </Grid>\r\n      <Grid item xs={false} sm={1} md={2}></Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import { productsActions } from \"./products-slice\";\r\n\r\nexport const fetchProductData = () => {\r\n  return async (dispatch) => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(\r\n        \"https://crypto-vesting-default-rtdb.europe-west1.firebasedatabase.app/products.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Could not fetch products data!\");\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    };\r\n    try {\r\n      const productsData = await fetchData();\r\n      dispatch(\r\n        productsActions.loadProducts({\r\n          items: productsData || [],\r\n        })\r\n      );\r\n    } catch (error) {\r\n      // dispatch(\r\n      //   productsActions.showNotification({\r\n      //     status: \"error\",\r\n      //     title: \"Error...\",\r\n      //     message: \"fetching cart data failed!\",\r\n      //   })\r\n      // );\r\n      return error;\r\n    }\r\n  };\r\n};\r\n","import { useSelector } from \"react-redux\";\r\n\r\nimport React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport CryptoCard from \"./CryptoCard\";\r\n// import data from \"./data\";\r\n\r\nconst Wallet = () => {\r\n  let walletItems = [];\r\n  walletItems = useSelector((state) => {\r\n    return state.wallet.items;\r\n  });\r\n\r\n  return (\r\n    <Grid item container>\r\n      <Grid item xs={false} sm={1} md={2}></Grid>\r\n      <Grid item xs={12} sm={10} md={8} container spacing={4}>\r\n        {walletItems.map((item) => {\r\n          return <CryptoCard key={item.id} item={item} />;\r\n        })}\r\n      </Grid>\r\n      <Grid item xs={false} sm={1} md={2}></Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Wallet;\r\n","import { Input, Grid, Button } from \"@material-ui/core\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport { authActions } from \"./store/auth-slice\";\r\n\r\nimport { useNavigate } from \"react-router\";\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\r\n  const [emailIsValid, setEmailIsValid] = useState(true);\r\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\r\n  const [passwordIsValid, setPasswordIsValid] = useState(true);\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const emailChangeHandler = (event) => {\r\n    setEnteredEmail(event.target.value);\r\n    setEmailIsValid(\r\n      event.target.value.trim().length === 0 || event.target.value.includes(\"@\")\r\n    );\r\n  };\r\n\r\n  const emailPasswordHandler = (event) => {\r\n    setEnteredPassword(event.target.value);\r\n    setPasswordIsValid(\r\n      event.target.value.trim().length === 0 ||\r\n        event.target.value.trim().length > 3\r\n    );\r\n  };\r\n\r\n  const checkFormIsValid = () => {\r\n    setFormIsValid(\r\n      emailIsValid &&\r\n        passwordIsValid &&\r\n        enteredEmail.trim().length > 0 &&\r\n        enteredPassword.trim().length > 0\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkFormIsValid();\r\n  }, [emailIsValid, passwordIsValid]);\r\n\r\n  const login = () => {\r\n    localStorage.setItem(\"isLoggedIn\", 1);\r\n    const token = localStorage.getItem(\"isLoggedIn\");\r\n    dispatch(authActions.logIn(token));\r\n    navigate(\"/home\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid item xs={1} sm={2} md={4}></Grid>\r\n        <Grid item xs={10} sm={8} md={4} container direction=\"column\">\r\n          <Box component=\"form\" autoComplete=\"off\">\r\n            <Input\r\n              placeholder=\"Login\"\r\n              id=\"login\"\r\n              label=\"login\"\r\n              type=\"email\"\r\n              fullWidth\r\n              value={enteredEmail.value}\r\n              onChange={emailChangeHandler}\r\n              error={!emailIsValid}\r\n            />\r\n            <Input\r\n              placeholder=\"Password\"\r\n              id=\"password\"\r\n              label=\"password\"\r\n              type=\"password\"\r\n              fullWidth\r\n              value={enteredPassword.value}\r\n              onChange={emailPasswordHandler}\r\n              error={!passwordIsValid}\r\n            />\r\n            <Box mt={1}>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                disabled={!formIsValid}\r\n                onClick={login}\r\n              >\r\n                Login\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={1} sm={2} md={4}></Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import Layout from \"./Layout/Layout\";\r\nimport Content from \"./Content\";\r\nimport Wallet from \"./Wallet\";\r\nimport Login from \"./Login\";\r\nimport { Route, Routes, Navigate } from \"react-router-dom\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport { authActions } from \"./store/auth-slice\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const isAuth = useSelector((state) => state.auth.isLoggedIn);\r\n  useEffect(() => {\r\n    const storedToken = localStorage.getItem(\"isLoggedIn\");\r\n    dispatch(authActions.checkAuth(storedToken));\r\n  }, [dispatch]);\r\n\r\n  let routes = (\r\n    <Routes>\r\n      <Route path=\"/home\" element={<Content />} />\r\n      <Route path=\"/login\" element={<Login />} />\r\n      <Route path=\"/\" element={<Navigate replace to=\"/home\" />} />\r\n    </Routes>\r\n  );\r\n\r\n  if (isAuth) {\r\n    routes = (\r\n      <Routes>\r\n        <Route path=\"/home\" element={<Content />} />\r\n        <Route path=\"/wallet\" element={<Wallet />} />\r\n        <Route path=\"/\" element={<Navigate replace to=\"/home\" />} />\r\n      </Routes>\r\n    );\r\n  }\r\n  return <Layout>{routes}</Layout>;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport walletSlice from \"./wallet-slice\";\r\nimport productsSlice from \"./products-slice\";\r\nimport authSlice from \"./auth-slice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    products: productsSlice.reducer,\r\n    wallet: walletSlice.reducer,\r\n    auth: authSlice.reducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport store from \"./store/index\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}